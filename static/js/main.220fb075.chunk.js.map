{"version":3,"sources":["logo.svg","components/question.jsx","components/quizz.jsx","App.js","reportWebVitals.js","index.js"],"names":["Description","description","question","answerIsOk","Question","moveToNext","useState","answered","setAnswered","setAnswerIsOk","text","answer","incorrectAnswers","options","_","concat","shuffle","value","optionSelected","option","isCorrect","isEqual","DescriptionModal","Modal","show","onHide","Header","closeButton","Title","Body","Footer","Button","variant","onClick","map","number","Option","Quizz","questions","shuffledQuestions","currentQuestion","setCurrentQuestion","score","setScore","questionsCount","size","Score","QuestionPage","props","App","roundQuestions","take","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yokCAAe,I,8DCKTA,EAAc,SAAC,GAA+C,IAAjCC,EAAgC,EAA5CC,SAAYD,YAAeE,EAAiB,EAAjBA,WAChD,OACE,gCACE,4BAAIF,IACJ,4BAAIE,EAAY,KAAO,eAKd,SAASC,EAAT,GAA6C,IAAzBF,EAAwB,EAAxBA,SAAUG,EAAc,EAAdA,WAC3C,EAAgCC,oBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOH,EAAP,KAAmBM,EAAnB,KAEQC,EAAmCR,EAAnCQ,KAAMC,EAA6BT,EAA7BS,OAAQC,EAAqBV,EAArBU,iBAChBC,EAAUC,IAAEF,GAAkBG,OAAOJ,GAAQK,UAAUC,QAEvDC,EAAiB,SAAAC,GACrB,IAAIZ,EAAJ,CACA,IAAMa,EAAYN,IAAEO,QAAQV,EAAQQ,GACpCX,GAAY,GACZC,EAAcW,KAGVE,EAAmB,kBACvB,eAACC,EAAA,EAAD,CAAOC,KAAMjB,EAAUkB,OAAQpB,EAA/B,UACE,cAACkB,EAAA,EAAMG,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACJ,EAAA,EAAMK,MAAP,8BAEF,cAACL,EAAA,EAAMM,KAAP,UACE,cAAC,EAAD,CAAa3B,SAAUA,EAAUC,WAAYA,MAE/C,cAACoB,EAAA,EAAMO,OAAP,UACE,cAACC,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QAAS5B,EAArC,yBAMN,OACE,gCACE,6BAAKK,IACJG,EAAQqB,KAAI,SAACf,EAAQgB,GAAT,OAAoB,cAAC,EAAD,CAAqBjC,SAAUA,EAAUiB,OAAQA,EAAQD,eAAgBA,GAA5DiB,MAC9C,cAACb,EAAD,OAKN,IAAMc,EAAS,SAAC,GAAD,IAAGlB,EAAH,EAAGA,eAAgBC,EAAnB,EAAmBA,OAAnB,OACb,cAACY,EAAA,EAAD,CAAQE,QAAS,kBAAMf,EAAeC,IAAtC,SAAgDA,KCjDnC,SAASkB,EAAT,GAA+B,IAAdC,EAAa,EAAbA,UACxBC,EAAoBzB,IAAEE,QAAQsB,GACpC,EAA8ChC,mBAAS,GAAvD,mBAAOkC,EAAP,KAAwBC,EAAxB,KACA,EAA0BnC,mBAAS,GAAnC,mBAAOoC,EAAP,KAAcC,EAAd,KAEMC,EAAiB9B,IAAE+B,KAAKN,GAOxBO,EAAQ,kBAAM,4BAAIJ,KAClBK,EAAe,SAAAC,GAAK,OACxB,gCACE,cAAC5C,EAAD,eAAc4C,IACd,8BAAIR,EAAkB,EAAtB,MAA4BI,SAIhC,OACE,8BAEIJ,EAAkBI,EAChB,cAACG,EAAD,CAAc7C,SAAUqC,EAAkBC,GAAkBnC,WAjBjD,SAAAe,GACbA,GAAWuB,EAASD,EAAQ,GAChCD,EAAmBD,EAAkB,MAgB/B,cAACM,EAAD,CAAOJ,OAAK,M,kBCdPO,MATf,WACE,IAAMC,EAAiBpC,IAAEqC,KAAKb,EAAW,IACzC,OACE,qBAAKc,UAAU,MAAf,SACI,cAACf,EAAD,CAAOC,UAAWY,OCEXG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.220fb075.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState } from 'react';\nimport _ from \"lodash\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport '../App.css';\n\nconst Description = ({ question: { description }, answerIsOk }) => {\n  return (\n    <div>\n      <p>{description}</p>\n      <p>{answerIsOk? \"Ok\" : \"Not ok\"}</p>\n    </div>\n  );\n}\n\nexport default function Question({ question, moveToNext }) {\n  const [answered, setAnswered] = useState(false);\n  const [answerIsOk, setAnswerIsOk] = useState(false);\n  \n  const { text, answer, incorrectAnswers } = question;\n  const options = _(incorrectAnswers).concat(answer).shuffle().value();\n\n  const optionSelected = option => {\n    if (answered) return;\n    const isCorrect = _.isEqual(answer, option);\n    setAnswered(true);\n    setAnswerIsOk(isCorrect);\n  };\n\n  const DescriptionModal = () =>\n    <Modal show={answered} onHide={moveToNext}>\n      <Modal.Header closeButton>\n        <Modal.Title>Modal heading</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Description question={question} answerIsOk={answerIsOk}/>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"secondary\" onClick={moveToNext}>\n          Close\n        </Button>\n      </Modal.Footer>\n    </Modal>\n\n  return (\n    <div>\n      <h3>{text}</h3>\n      {options.map((option, number) => <Option key={number} question={question} option={option} optionSelected={optionSelected}/> )}\n      <DescriptionModal />\n    </div>\n  );\n}\n\nconst Option = ({ optionSelected, option }) =>\n  <Button onClick={() => optionSelected(option)}>{option}</Button>","import React, { useState } from 'react';\nimport _ from \"lodash\";\nimport Question from \"./question\";\n\nexport default function Quizz({ questions }) {\n  const shuffledQuestions = _.shuffle(questions);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [score, setScore] = useState(0);\n\n  const questionsCount = _.size(shuffledQuestions);\n\n  const moveToNext = isCorrect => {\n    if (isCorrect) setScore(score + 1);\n    setCurrentQuestion(currentQuestion + 1)\n  };\n\n  const Score = () => <p>{score}</p>;\n  const QuestionPage = props => (\n    <div>\n      <Question {...props} />\n      <p>{currentQuestion + 1} / {questionsCount}</p>\n    </div>\n  );\n\n  return (\n    <div>\n      {\n        currentQuestion < questionsCount?\n          <QuestionPage question={shuffledQuestions[currentQuestion]} moveToNext={moveToNext}/>\n        : <Score score />\n      }      \n    </div>\n  );\n}","import logo from './logo.svg';\nimport Quizz from \"./components/quizz\";\nimport questions from \"./questions.json\";\nimport _ from \"lodash\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n  const roundQuestions = _.take(questions, 10);\n  return (\n    <div className=\"App\">\n        <Quizz questions={roundQuestions} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}