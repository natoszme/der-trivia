{"version":3,"sources":["components/question/index.jsx","components/didacticModal/index.jsx","components/topic/index.jsx","components/logo/index.jsx","components/didacticQuestion/index.jsx","components/score/index.jsx","config/index.js","components/round/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["Option","onOptionSelected","option","Button","className","onClick","_","toUpper","question","options","text","map","number","Description","description","answerIsOk","show","descriptionRead","Modal","onHide","Header","Title","topic","Body","Footer","variant","DidacticQuestion","moveToNext","currentQuestionNumber","questionCount","useState","answered","setAnswered","setAnswerIsOk","setOptions","answer","incorrectAnswers","useEffect","shuffledOptions","concat","shuffle","value","Progress","isCorrect","isEqual","Score","score","setPlayAgain","config","questionsPerRound","parseInt","process","Round","questions","setQuestions","setCurrentQuestionNumber","setScore","roundQuestions","sampleSize","questionPool","isEmpty","questionsCount","size","isActive","currentQuestion","Landing","follow","Topics","App","currentStep","setCurrentStep","Game","steps","Step","get","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.34d51ecd.chunk.js","sourcesContent":["import _ from \"lodash\";\nimport React from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport \"./index.css\";\n\nconst Option = ({ onOptionSelected, option }) =>\n  <Button className=\"btn btn-dark option-button col-md-12\" onClick={() => onOptionSelected(option)}>\n    <span className=\"option-text\">{_.toUpper(option)}</span>\n  </Button>\n\nexport default ({ question, options, onOptionSelected }) => (\n  <div>\n    <p>{question.text}</p>\n    <div className=\"col-md-8\">\n      {options.map((option, number) =>\n        <Option\n          key={number}\n          question={question}\n          option={option}\n          onOptionSelected={onOptionSelected}\n        /> )}\n    </div>\n  </div>\n);","import React from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\n\nconst Description = ({ question: { description }, answerIsOk }) => {\n  return (\n    <div>\n      <p>{description}</p>\n      <p>{answerIsOk? \"Ok\" : \"Not ok\"}</p>\n    </div>\n  );\n}\n\nexport default ({ question, show, answerIsOk, descriptionRead }) => (\n  <Modal show={show} onHide={descriptionRead}>\n    <Modal.Header>\n      <Modal.Title>{question.topic}</Modal.Title>\n    </Modal.Header>\n    <Modal.Body>\n      <Description question={question} answerIsOk={answerIsOk}/>\n    </Modal.Body>\n    <Modal.Footer>\n      <Button variant=\"secondary\" onClick={descriptionRead}>\n        Cerrar\n      </Button>\n    </Modal.Footer>\n  </Modal>\n);","import _ from \"lodash\";\nimport React from \"react\";\nimport \"./index.css\"\n\nexport default ({ topic }) => <p className=\"topic\">{_.toUpper(topic)}</p>","import React from \"react\";\n\nexport default ({ topic }) => <p>#MeRepresenta</p>","import React, { useEffect, useState } from 'react';\nimport _ from \"lodash\";\nimport '../../App.css';\nimport Question from \"../question\";\nimport DidacticModal from \"../didacticModal\";\nimport Topic from \"../topic\";\nimport Logo from \"../logo\";\nimport \"./index.css\";\n\nexport default function DidacticQuestion({ question, moveToNext, currentQuestionNumber, questionCount }) {\n  const [answered, setAnswered] = useState(false);\n  const [answerIsOk, setAnswerIsOk] = useState(false);\n  const [options, setOptions] = useState([]);\n  \n  const { answer, incorrectAnswers, topic } = question;\n  useEffect(() => {\n    const shuffledOptions = _(incorrectAnswers).concat(answer).shuffle().value();\n    setOptions(shuffledOptions);\n  }, []);\n\n  const onOptionSelected = option => {\n    if (answered) return;\n    const isCorrect = _.isEqual(answer, option);\n    setAnswered(true);\n    setAnswerIsOk(isCorrect);\n  };\n\n  const Progress = () => <p>{currentQuestionNumber + 1} / {questionCount}</p>;\n\n  return (\n    <div>\n      <Logo topic={topic} />\n      <Topic topic={topic}/>\n      <Question question={question} options={options} onOptionSelected={onOptionSelected}/>\n      <Progress />\n      <DidacticModal\n        show={answered}\n        question={question}\n        answerIsOk={answerIsOk}\n        descriptionRead={() => moveToNext(answerIsOk)}\n      />\n    </div>\n  );\n}","import React from \"react\";\n\nexport default function Score({ score, setPlayAgain }) {\n  return <div>\n    <p>{score}</p>\n    <button onClick={setPlayAgain}>Jugar de nuevo</button>\n  </div>;\n}","const config = {\n  questionsPerRound: parseInt(process.env.REACT_APP_QUESTIONS_PER_ROUND) || 10\n};\n\nexport default config;","import React, { useState, useEffect } from 'react';\nimport _ from \"lodash\";\nimport DicaticQuestion from \"../didacticQuestion\";\nimport Score from \"../score\";\nimport config from \"../../config\";\nimport questionPool from \"../../questions.json\";\n\nexport default function Round({ setPlayAgain }) {\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestionNumber, setCurrentQuestionNumber] = useState(0);\n  const [score, setScore] = useState(0);\n  useEffect(() => {\n    const roundQuestions = _.sampleSize(questionPool, config.questionsPerRound);\n    setQuestions(roundQuestions);\n  }, []);\n\n  if (_.isEmpty(questions)) return null;\n  \n  const moveToNext = isCorrect => {\n    if (isCorrect) setScore(score + 1);\n    setCurrentQuestionNumber(currentQuestionNumber + 1)\n  };\n  \n  const questionsCount = _.size(questions);\n  const isActive = currentQuestionNumber < questionsCount;\n  const currentQuestion = questions[currentQuestionNumber];\n\n  return (\n    <div>\n      {\n        isActive?\n        <DicaticQuestion\n          key={currentQuestionNumber}\n          question={currentQuestion}\n          moveToNext={moveToNext}\n          questionCount={questionsCount}\n          currentQuestionNumber={currentQuestionNumber}\n        />\n        : <Score score={score} setPlayAgain={setPlayAgain}/>\n      }      \n    </div>\n  );\n};","import Round from \"./components/round\";\nimport _ from \"lodash\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { useState } from 'react';\nimport Logo from \"./components/logo\";\nimport \"./App.css\"\n\nconst Landing = ({ follow }) => <div>\n  <p>Merre</p>\n  <button onClick={follow}>Next</button>\n</div>\n\nconst Topics = ({ follow }) => <div>\n  <Logo />\n  <p>Estos son los temas</p>\n  <button onClick={follow}>Next</button>\n</div>;\n\nfunction App() {\n  const [currentStep, setCurrentStep] = useState(\"landing\");\n  const [playAgain, setPlayAgain] = useState();\n  const Game = ({ setPlayAgain }) => {\n    return <Round setPlayAgain={setPlayAgain}/>;\n  };\n\n  const steps = {\n    \"landing\": () => <Landing follow={() => setCurrentStep(\"topics\")}/>,\n    \"topics\": () => <Topics follow={() => setCurrentStep(\"game\")}/>,\n    \"game\": () => <Game setPlayAgain={setPlayAgain}/>\n  };\n\n  const Step = _.get(steps, currentStep);\n\n  return <div className=\"App col-md-4 col-xs-12\">\n      <Step />\n  </div>;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}